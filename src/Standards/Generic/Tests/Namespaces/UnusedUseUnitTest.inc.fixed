<?php

namespace My\Project;

use BarClass as Bar;
use Somewhere\Something;
use Foo;
use Route;
use ORM;
use Truc;
use Machin;
use Client, Customer as Clients;
use My\{TestD};
use function SomeNamespace\fn_a;
use const SomeNamespace\ConstA;
use SomeNamespace\{ClassD, ClassF as F};
use function SomeNamespace\{fn_d};
use const SomeNamespace\{ConstD};

class Container
{
    function test1(Bar $bar): ?Something
    {
        return null;
    }

    /**
     * @Foo
     * @Route("/{id}")
     * @ORM\Column(type="integer")
     */

    /**
     * @var Truc $truc
     */
    public $truc;

    /**
     * @param Toto $toto
     *
     * @return Machin|\Machine
     */
    function test2($toto)
    {
        $a = fn_a(ConstA);

        return $a;
    }

    public $SomethingElse;

    function test3()
    {
        /** @var Clients|Client[] $client */
        $client = [$this->SomethingElse];

        return $client;
    }

    function test4(ClassD $classD): F
    {
        $d = fn_d(ConstD);

        return $d;
    }

    /**
     * @var Test|TestA|TestB|TestC|TestD|TestE
     */
    public $test;
}
